# Generated by Django 5.1.3 on 2024-11-24 04:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('Administrador', 'Administrador'), ('Tecnico', 'Tecnico'), ('Cliente', 'Cliente')], default='Cliente', max_length=15)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Herramienta',
            fields=[
                ('id_herramienta', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('estado', models.CharField(choices=[('Disponible', 'Disponible'), ('En Uso', 'En Uso'), ('En Reparacion', 'En Reparacion')], max_length=15)),
                ('cantidad', models.IntegerField()),
                ('ubicacion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movimiento',
            fields=[
                ('id_movimiento', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('Ingreso', 'Ingreso'), ('Egreso', 'Egreso')], max_length=7)),
                ('cantidad', models.IntegerField()),
                ('fecha', models.DateTimeField()),
                ('herramienta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_datos.herramienta')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id_notificacion', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('Recordatorio', 'Recordatorio'), ('Alerta', 'Alerta')], max_length=12)),
                ('fecha_envio', models.DateTimeField()),
                ('contenido', models.TextField()),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Enviada', 'Enviada'), ('Fallida', 'Fallida')], max_length=9)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id_reporte', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('Inventario', 'Inventario'), ('Servicios', 'Servicios'), ('Rendimiento', 'Rendimiento'), ('Utilizacion', 'Utilizacion')], max_length=15)),
                ('fecha_creacion', models.DateTimeField()),
                ('contenido', models.TextField()),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id_servicio', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('duracion', models.IntegerField()),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Confirmado', 'Confirmado'), ('Completado', 'Completado')], max_length=12)),
                ('descripcion', models.TextField()),
                ('cliente', models.ForeignKey(limit_choices_to={'rol': 'Cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='servicios_cliente', to=settings.AUTH_USER_MODEL)),
                ('tecnico', models.ForeignKey(limit_choices_to={'rol': 'Tecnico'}, on_delete=django.db.models.deletion.CASCADE, related_name='servicios_tecnico', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id_agenda', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(choices=[('Programada', 'Programada'), ('Cancelada', 'Cancelada')], max_length=10)),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_datos.servicio')),
            ],
        ),
    ]
